import { PricesAbi, PricesAbi__factory } from "../autogenerated";
import { Contract, WalletLocked, WalletUnlocked } from "fuels";
import { PricesContractAdapter } from "redstone-sdk";
import { FuelContractConnector } from "../FuelContractConnector";
import { FuelPricesContractAdapter } from "./FuelPricesContractAdapter";

export type FuelPricesContract = PricesAbi & Contract;

export class FuelPricesContractConnector extends FuelContractConnector<PricesContractAdapter> {
  constructor(
    wallet: WalletLocked | WalletUnlocked,
    private contractId: string
  ) {
    super(wallet);
  }

  async getContract(): Promise<FuelPricesContract> {
    return PricesAbi__factory.connect(this.contractId, this.wallet);
  }

  async getAdapter(): Promise<PricesContractAdapter> {
    return new FuelPricesContractAdapter(
      await this.getContract(),
      this.getGasLimit()
    );
  }
}
